version: '3.7'

services:
  postgres:
    image: postgres:16.2
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_db_user
      POSTGRES_PASSWORD: testthispass
    networks:
      - keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start
    environment:
      KC_HOSTNAME: keycloak.mattreda.pro
      KC_HOSTNAME_STRICT: "false"
      KC_PROXY_ADDRESS_FORWARDING: 'true'
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: changeme
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak_db
      KC_DB_USERNAME: keycloak_db_user
      KC_DB_PASSWORD: testthispass
    deploy:
      labels:
        - traefik.enable=true # enable traefik
        - traefik.docker.network=traefik-public # put it in the same network as traefik
        - traefik.constraint-label=traefik-public # assign the same label as traefik so it can be discovered
        - traefik.http.routers.keycloak.rule=Host(`keycloak.mattreda.pro`) # listen to port 80 for request to KEYCLOAK_DOMAIN (use together with the line below)
        - traefik.http.routers.keycloak.entrypoints=http
        - traefik.http.middlewares.keycloak-https-redirect.redirectscheme.scheme=https # redirect traffic to https
        - traefik.http.middlewares.keycloak-https-redirect.redirectscheme.permanent=true # redirect traffic to https
        - traefik.http.routers.keycloak-secured.rule=Host(`keycloak.mattreda.pro`) # listen to port 443 for request to KEYCLOAK_DOMAIN (use together with the line below)
        - traefik.http.routers.keycloak-secured.entrypoints=https
        - traefik.http.routers.keycloak-secured.tls.certresolver=le # use the Let's Encrypt certificate we set up earlier
        - traefik.http.services.keycloak-secured.loadbalancer.server.port=8080 
    restart: always
    depends_on:
      - postgres
    networks:
      - keycloak_network
      - traefik-public

volumes:
  postgres_data:
    driver: local

networks:
  keycloak_network:
    driver: overlay
    ipam:
      config:
        # Setup unique static subnets for every stack you deploy. 
        # This avoids IP/gateway conflicts which can otherwise occur when you're creating/removing stacks a lot.
        - subnet: 172.16.49.0/24
  traefik-public:
    external: true
